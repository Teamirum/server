# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [ "dev" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

        # Github secrets로부터 데이터를 받아서, 워크 플로우에 파일을 생성
      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew 
          ./gradlew build

      - name: Save SSH key
        run: |
          touch ./key.pem
          echo "${{ secrets.KEY }}" > ./key.pem
          chmod 600 key.pem
    

    # WAR 파일을 서버로 옮기기
      - name: Copy WAR file to server
        run : |
          scp -i key.pem ./build/libs/*.war ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/war/

      ## 도커허브 로그
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWD }}

      ## 웹 이미지 빌드 및 도커허브에 push
#      - name: web docker build and push
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWD }}
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest .
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{secrets.USERNAME}}
          key: ${{ secrets.KEY }}
          script: |
            cd ~
            sudo docker cp ~/war/backend-1.0-SNAPSHOT.war team-spring:/usr/local/tomcat/webapps/ROOT.war
            sudo docker compose up -d
            sudo docker image prune -f
          
