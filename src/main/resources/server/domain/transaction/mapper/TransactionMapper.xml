<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="server.domain.transaction.mapper.TransactionMapper">

    <!-- Result Mapping with Enum TypeHandler -->
    <resultMap id="TransactionResultMap" type="server.domain.transaction.domain.Transaction">
        <id property="idx" column="idx" />
        <result property="memberIdx" column="member_idx" />
        <result property="creditIdx" column="credit_idx" />
        <result property="creditNumber" column="credit_number" />
        <result property="accountIdx" column="account_idx" />
        <result property="accountNumber" column="account_number" />
        <result property="time" column="time" />
        <result property="payMethod" column="pay_method" />
        <result property="amount" column="amount" />
        <result property="memo" column="memo" />
        <result property="category" column="category" />
        <result property="tranId" column="tran_id" />
    </resultMap>

    <!-- Insert Transaction -->
    <insert id="save" parameterType="server.domain.transaction.domain.Transaction">
        INSERT INTO Transaction (
        member_idx, credit_idx, credit_number, account_idx, account_number, time, pay_method, amount, memo, category, tran_id
        ) VALUES (
        #{memberIdx},
        <if test="creditIdx != null">#{creditIdx},</if>
        <if test="creditIdx == null">credit_idx,</if>
        <if test="creditNumber != null">#{creditNumber},</if>
        <if test="creditNumber == null">credit_number,</if>
        <if test="accountIdx != null">#{accountIdx},</if>
        <if test="accountIdx == null">account_idx,</if>
        <if test="accountNumber != null">#{accountNumber},</if>
        <if test="accountNumber == null">account_number,</if>
        #{time}, #{payMethod}, #{amount}, #{memo},
        IFNULL(#{category}, 'UNCATEGORIZED'),
        #{tranId}
        )
    </insert>



    <!-- Select Transaction by TransactionIdx -->
    <select id="findByTransactionIdx" parameterType="Long" resultMap="TransactionResultMap">
        SELECT *
        FROM Transaction
        WHERE idx = #{idx}
    </select>

    <!-- Select all Transactions by CreditIdx -->
    <select id="findTransactionsByCreditIdx" parameterType="Long" resultMap="TransactionResultMap">
        SELECT *
        FROM Transaction
        WHERE credit_idx = #{creditIdx}
    </select>

    <!-- Select all Transactions by MemberIdx -->
    <select id="findAllByMemberIdx" parameterType="Long" resultMap="TransactionResultMap">
        SELECT *
        FROM Transaction
        WHERE member_idx = #{memberIdx} ORDER BY idx DESC
    </select>

    <!-- Update Transaction -->
    <update id="updateTransaction" parameterType="server.domain.transaction.domain.Transaction">
        UPDATE Transaction
        SET
        credit_idx = IFNULL(#{creditIdx}, credit_idx),
        account_idx = IFNULL(#{accountIdx}, account_idx),
        pay_method = #{payMethod},
        amount = IFNULL(#{amount}, amount),
        memo = IFNULL(#{memo}, memo),
        category = IFNULL(#{category}, 'UNCATEGORIZED'),
        tran_id = #{tranId},
        time = #{time}
        WHERE
        idx = #{idx} AND
        member_idx = #{memberIdx}
    </update>



    <!-- Delete Transaction -->
    <delete id="delete" parameterType="Long">
        DELETE FROM Transaction
        WHERE idx = #{idx}
    </delete>

    <select id="findByIdxAndMemberIdx" parameterType="map" resultMap="TransactionResultMap">
        SELECT *
        FROM Transaction
        WHERE idx = #{idx} AND member_idx = #{memberIdx}
    </select>

</mapper>
